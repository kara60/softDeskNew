<!-- Talep Türü Analizi Component -->
<div class="lg:col-span-2 bg-white rounded-2xl p-8 shadow-sm border border-gray-100">
    <div class="mb-6">
        <div class="flex items-center justify-between mb-2">
            <h3 class="text-lg font-semibold text-gray-900">Talep Türü Analizi</h3>
            <span class="text-2xl font-bold text-purple-600">@MostPopularCount</span>
        </div>
        <p class="text-gray-600 text-sm">En çok hangi türde talep açtığınızı görün</p>
        <p class="text-gray-500 text-sm mt-1">En Popüler: <span class="font-medium text-purple-600">@MostPopularType</span></p>
    </div>

    <div class="space-y-4">
        @foreach (var ticketType in TicketTypes)
        {
            <div class="flex items-center justify-between p-5 bg-@(ticketType.Color)-50 rounded-xl border border-@(ticketType.Color)-100 hover:bg-@(ticketType.Color)-100 transition-colors duration-200 @(ticketType.IsPopular ? "relative border-2 border-" + ticketType.Color + "-200" : "")">
                @if (ticketType.IsPopular)
                {
                    <div class="absolute -top-2 -right-2">
                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-bold bg-@(ticketType.Color)-600 text-white">EN POPÜLER</span>
                    </div>
                }
                <div class="flex items-center">
                    <div class="w-12 h-12 bg-@(ticketType.Color)-500 rounded-xl flex items-center justify-center">
                        @((MarkupString)ticketType.Icon)
                    </div>
                    <div class="ml-4">
                        <p class="font-semibold text-gray-900">@ticketType.Name</p>
                        <p class="text-sm text-gray-600">@ticketType.Description</p>
                    </div>
                </div>
                <div class="text-right">
                    <p class="text-2xl font-bold text-@(ticketType.Color)-600">@ticketType.Count</p>
                    <p class="text-sm text-gray-500">%@ticketType.Percentage.ToString("F1")</p>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public List<TicketTypeData> TicketTypes { get; set; } = new();
    [Parameter] public string MostPopularType { get; set; } = "Genel Destek";
    [Parameter] public int MostPopularCount { get; set; } = 19;

    protected override void OnInitialized()
    {
        // Default data if not provided
        if (!TicketTypes.Any())
        {
            TicketTypes = new List<TicketTypeData>
            {
                new TicketTypeData
                {
                    Name = "Hata/Sorun",
                    Description = "Hata ve sorun bildirimleri",
                    Count = 11,
                    Percentage = 26.2m,
                    Color = "red",
                    Icon = @"<svg class=""w-6 h-6 text-white"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                               <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z"" />
                             </svg>",
                    IsPopular = false
                },
                new TicketTypeData
                {
                    Name = "Yeni Özellik",
                    Description = "Yeni özellik talepleri",
                    Count = 5,
                    Percentage = 11.9m,
                    Color = "blue",
                    Icon = @"<svg class=""w-6 h-6 text-white"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                               <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"" />
                             </svg>",
                    IsPopular = false
                },
                new TicketTypeData
                {
                    Name = "Danışmanlık/Eğitim",
                    Description = "Kullanıcı eğitimi ve danışmanlık hizmetleri",
                    Count = 4,
                    Percentage = 9.5m,
                    Color = "green",
                    Icon = @"<svg class=""w-6 h-6 text-white"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                               <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"" />
                             </svg>",
                    IsPopular = false
                },
                new TicketTypeData
                {
                    Name = "Genel Destek",
                    Description = "Diğer tüm destek ihtiyaçlarınız için",
                    Count = 19,
                    Percentage = 45.2m,
                    Color = "purple",
                    Icon = @"<svg class=""w-6 h-6 text-white"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                               <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"" />
                             </svg>",
                    IsPopular = true
                }
            };
        }
    }

    public class TicketTypeData
    {
        public string Name { get; set; } = "";
        public string Description { get; set; } = "";
        public int Count { get; set; }
        public decimal Percentage { get; set; }
        public string Color { get; set; } = "";
        public string Icon { get; set; } = "";
        public bool IsPopular { get; set; }
    }
}