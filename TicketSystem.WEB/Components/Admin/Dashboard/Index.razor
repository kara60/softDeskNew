@* @page "/admin/dashboard"
@rendermode InteractiveServer

<PageTitle>Admin Dashboard - SoftDesk</PageTitle>

<!-- Page Header -->
<div class="mb-8">
    <div class="flex items-center justify-between">
        <div>
            <h1 class="text-2xl font-semibold text-gray-900 mb-2">Admin Dashboard</h1>
            <p class="text-gray-600">Tüm müşterilerin ticket istatistikleri ve özeti</p>
        </div>
        <div class="flex items-center space-x-3">
            <button @onclick="RefreshData" disabled="@IsRefreshing" class="inline-flex items-center px-3 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 transition-colors">
                @if (IsRefreshing)
                {
                    <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-gray-700" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    
                }
                else
                {
                    <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                    </svg>
                 
                }
            </button>
            <select @bind="SelectedTimeRange" @onchange="FilterByTimeRange" class="px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                <option value="today">Bugün</option>
                <option value="week">Bu Hafta</option>
                <option value="month">Bu Ay</option>
                <option value="quarter">Bu Çeyrek</option>
                <option value="year">Bu Yıl</option>
                <option value="all">Tüm Zamanlar</option>
            </select>
        </div>
    </div>
</div>

<!-- Summary Cards -->
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <!-- Total Tickets -->
    <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100 hover:shadow-md transition-shadow duration-200">
        <div class="flex items-center justify-between">
            <div>
                <div class="w-12 h-12 bg-blue-50 rounded-xl flex items-center justify-center mb-4">
                    <svg class="w-6 h-6 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                    </svg>
                </div>
                <p class="text-3xl font-bold text-gray-900 mb-1">@TotalStats.TotalTickets</p>
                <p class="text-sm text-gray-600 mb-1">Toplam Ticket</p>
                <p class="text-xs text-blue-600 font-medium flex items-center">
                    @if (TotalStats.TicketGrowth >= 0)
                    {
                        <svg class="w-3 h-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 14l9-9 3 3L7 20l-4-4z" />
                        </svg>
                        <span>+@TotalStats.TicketGrowth%</span>
                    }
                    else
                    {
                        <svg class="w-3 h-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 14l-9-9-3 3 12 12 4-4z" />
                        </svg>
                        <span>@TotalStats.TicketGrowth%</span>
                    }
                </p>
            </div>
        </div>
    </div>

    <!-- Pending Tickets -->
    <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100 hover:shadow-md transition-shadow duration-200">
        <div class="flex items-center justify-between">
            <div>
                <div class="w-12 h-12 bg-orange-50 rounded-xl flex items-center justify-center mb-4">
                    <svg class="w-6 h-6 text-orange-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                </div>
                <p class="text-3xl font-bold text-gray-900 mb-1">@TotalStats.PendingTickets</p>
                <p class="text-sm text-gray-600 mb-1">Bekleyen Onay</p>
                <p class="text-xs text-orange-600 font-medium">Dikkat gerekli</p>
            </div>
        </div>
    </div>

    <!-- Active Companies -->
    <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100 hover:shadow-md transition-shadow duration-200">
        <div class="flex items-center justify-between">
            <div>
                <div class="w-12 h-12 bg-green-50 rounded-xl flex items-center justify-center mb-4">
                    <svg class="w-6 h-6 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                    </svg>
                </div>
                <p class="text-3xl font-bold text-gray-900 mb-1">@TotalStats.ActiveCompanies</p>
                <p class="text-sm text-gray-600 mb-1">Aktif Firma</p>
                <p class="text-xs text-green-600 font-medium">Büyüme devam ediyor</p>
            </div>
        </div>
    </div>

    <!-- Resolution Rate -->
    <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100 hover:shadow-md transition-shadow duration-200">
        <div class="flex items-center justify-between">
            <div>
                <div class="w-12 h-12 bg-purple-50 rounded-xl flex items-center justify-center mb-4">
                    <svg class="w-6 h-6 text-purple-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                </div>
                <p class="text-3xl font-bold text-gray-900 mb-1">%@TotalStats.ResolutionRate</p>
                <p class="text-sm text-gray-600 mb-1">Çözüm Oranı</p>
                <p class="text-xs text-purple-600 font-medium">Hedefin üzerinde</p>
            </div>
        </div>
    </div>
</div>

<!-- Charts Row -->
<div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
    <!-- Ticket Trend Chart -->
    <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
        <div class="flex items-center justify-between mb-6">
            <h3 class="text-lg font-semibold text-gray-900">Ticket Trendi</h3>
            <select @bind="ChartTimeRange" class="text-sm border border-gray-300 rounded-lg px-3 py-1">
                <option value="7">Son 7 Gün</option>
                <option value="30">Son 30 Gün</option>
                <option value="90">Son 3 Ay</option>
            </select>
        </div>
        <div class="h-64 flex items-center justify-center">
            <!-- Simulated Chart -->
            <div class="w-full h-full bg-gradient-to-t from-blue-50 to-transparent rounded-lg flex items-end justify-around px-4 pb-4">
                @for (int i = 0; i < 7; i++)
                {
                    var height = Random.Shared.Next(20, 90);
                    <div class="bg-blue-500 rounded-t-lg transition-all duration-300 hover:bg-blue-600 flex items-end justify-center"
                         style="width: 40px; height: @(height)%; min-height: 20px;">
                        <span class="text-xs text-white mb-2">@Random.Shared.Next(5, 25)</span>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Status Distribution -->
    <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
        <h3 class="text-lg font-semibold text-gray-900 mb-6">Durum Dağılımı</h3>
        <div class="space-y-4">
            @foreach (var status in StatusDistribution)
            {
                <div class="flex items-center justify-between">
                    <div class="flex items-center">
                        <div class="w-3 h-3 rounded-full mr-3" style="background-color: @status.Color"></div>
                        <span class="text-sm font-medium text-gray-900">@status.Name</span>
                    </div>
                    <div class="flex items-center space-x-2">
                        <span class="text-sm text-gray-500">@status.Count</span>
                        <div class="w-20 bg-gray-200 rounded-full h-2">
                            <div class="h-2 rounded-full transition-all duration-300" 
                                 style="width: @status.Percentage%; background-color: @status.Color"></div>
                        </div>
                        <span class="text-xs text-gray-500 w-10">%@status.Percentage</span>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Companies Performance -->
<div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100 mb-8">
    <div class="flex items-center justify-between mb-6">
        <h3 class="text-lg font-semibold text-gray-900">Müşteri Performansı</h3>
        <button @onclick="@(() => ShowAllCompanies = !ShowAllCompanies)" class="text-sm text-blue-600 hover:text-blue-800 font-medium">
            @(ShowAllCompanies ? "Daha Az Göster" : "Tümünü Göster")
        </button>
    </div>
    
    <div class="overflow-x-auto">
        <table class="min-w-full">
            <thead>
                <tr class="border-b border-gray-200">
                    <th class="text-left py-3 px-4 font-medium text-gray-700">Firma</th>
                    <th class="text-center py-3 px-4 font-medium text-gray-700">Toplam Ticket</th>
                    <th class="text-center py-3 px-4 font-medium text-gray-700">Bekleyen</th>
                    <th class="text-center py-3 px-4 font-medium text-gray-700">Çözülen</th>
                    <th class="text-center py-3 px-4 font-medium text-gray-700">Başarı Oranı</th>
                    <th class="text-center py-3 px-4 font-medium text-gray-700">Son Aktivite</th>
                </tr>
            </thead>
            <tbody class="divide-y divide-gray-200">
                @foreach (var company in (ShowAllCompanies ? CompanyStats : CompanyStats.Take(5)))
                {
                    <tr class="hover:bg-gray-50">
                        <td class="py-4 px-4">
                            <div class="flex items-center">
                                <div class="w-10 h-10 bg-gradient-to-br @company.ColorGradient rounded-lg flex items-center justify-center mr-3">
                                    <span class="text-sm font-bold text-white">@company.Initials</span>
                                </div>
                                <div>
                                    <div class="font-medium text-gray-900">@company.Name</div>
                                    <div class="text-sm text-gray-500">@company.ContactPerson</div>
                                </div>
                            </div>
                        </td>
                        <td class="py-4 px-4 text-center">
                            <span class="text-lg font-semibold text-gray-900">@company.TotalTickets</span>
                        </td>
                        <td class="py-4 px-4 text-center">
                            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-800">
                                @company.PendingTickets
                            </span>
                        </td>
                        <td class="py-4 px-4 text-center">
                            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                @company.ResolvedTickets
                            </span>
                        </td>
                        <td class="py-4 px-4 text-center">
                            <div class="flex items-center justify-center">
                                <div class="w-16 bg-gray-200 rounded-full h-2 mr-2">
                                    <div class="bg-green-500 h-2 rounded-full transition-all duration-300" 
                                         style="width: @company.SuccessRate%"></div>
                                </div>
                                <span class="text-sm font-medium text-gray-900">%@company.SuccessRate</span>
                            </div>
                        </td>
                        <td class="py-4 px-4 text-center text-sm text-gray-500">
                            @company.LastActivity
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Recent Activities -->
<div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
    <h3 class="text-lg font-semibold text-gray-900 mb-6">Son Aktiviteler</h3>
    <div class="space-y-4">
        @foreach (var activity in RecentActivities)
        {
            <div class="flex items-start space-x-3">
                <div class="w-8 h-8 @activity.IconColor rounded-full flex items-center justify-center flex-shrink-0">
                    @((MarkupString)activity.Icon)
                </div>
                <div class="flex-1 min-w-0">
                    <p class="text-sm font-medium text-gray-900">@activity.Title</p>
                    <p class="text-sm text-gray-600">@activity.Description</p>
                    <p class="text-xs text-gray-500 mt-1">@activity.TimeAgo</p>
                </div>
                <div class="flex-shrink-0">
                    <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium @activity.StatusClass">
                        @activity.Status
                    </span>
                </div>
            </div>
        }
    </div>
    
    <div class="mt-6 text-center">
        <button class="text-sm text-blue-600 hover:text-blue-800 font-medium">
            Tüm Aktiviteleri Görüntüle
        </button>
    </div>
</div>

@code {
    private string SelectedTimeRange = "month";
    private string ChartTimeRange = "30";
    private bool ShowAllCompanies = false;
    private bool IsRefreshing = false;

    private DashboardStats TotalStats = new();
    private List<StatusData> StatusDistribution = new();
    private List<CompanyPerformance> CompanyStats = new();
    private List<ActivityData> RecentActivities = new();

    protected override void OnInitialized()
    {
        LoadDashboardData();
    }

    private void LoadDashboardData()
    {
        // Total Stats
        TotalStats = new DashboardStats
        {
            TotalTickets = 2847,
            PendingTickets = 156,
            ActiveCompanies = 47,
            ResolutionRate = 94.2m,
            TicketGrowth = 12.5m
        };

        // Status Distribution
        StatusDistribution = new List<StatusData>
        {
            new StatusData { Name = "Bekleyen", Count = 156, Percentage = 18, Color = "#f59e0b" },
            new StatusData { Name = "İşlemde", Count = 234, Percentage = 27, Color = "#3b82f6" },
            new StatusData { Name = "Çözüldü", Count = 321, Percentage = 37, Color = "#10b981" },
            new StatusData { Name = "Kapandı", Count = 156, Percentage = 18, Color = "#6b7280" }
        };

        // Company Performance
        CompanyStats = new List<CompanyPerformance>
        {
            new CompanyPerformance
            {
                Name = "BANAT FIRÇA VE PLASTİK SAN. A.Ş.",
                ContactPerson = "Mehmet Banat",
                Initials = "BF",
                ColorGradient = "from-blue-500 to-blue-600",
                TotalTickets = 234,
                PendingTickets = 12,
                ResolvedTickets = 198,
                SuccessRate = 96,
                LastActivity = "2 saat önce"
            },
            new CompanyPerformance
            {
                Name = "SOYBAŞ DEMİR SANAYİ VE TİCARET A.Ş.",
                ContactPerson = "Ali Soybaş",
                Initials = "SD",
                ColorGradient = "from-green-500 to-green-600",
                TotalTickets = 189,
                PendingTickets = 8,
                ResolvedTickets = 167,
                SuccessRate = 94,
                LastActivity = "5 saat önce"
            },
            new CompanyPerformance
            {
                Name = "NURTEKS",
                ContactPerson = "Fatma Nur",
                Initials = "NT",
                ColorGradient = "from-purple-500 to-purple-600",
                TotalTickets = 78,
                PendingTickets = 3,
                ResolvedTickets = 71,
                SuccessRate = 97,
                LastActivity = "1 gün önce"
            },
            new CompanyPerformance
            {
                Name = "TEKNİK MAKİNA LTD. ŞTİ.",
                ContactPerson = "Ahmet Teknik",
                Initials = "TM",
                ColorGradient = "from-orange-500 to-orange-600",
                TotalTickets = 145,
                PendingTickets = 15,
                ResolvedTickets = 118,
                SuccessRate = 89,
                LastActivity = "3 saat önce"
            },
            new CompanyPerformance
            {
                Name = "GÜVEN İNŞAAT A.Ş.",
                ContactPerson = "Zeynep Güven",
                Initials = "Gİ",
                ColorGradient = "from-indigo-500 to-indigo-600",
                TotalTickets = 67,
                PendingTickets = 4,
                ResolvedTickets = 58,
                SuccessRate = 92,
                LastActivity = "6 saat önce"
            }
        };

        // Recent Activities
        RecentActivities = new List<ActivityData>
        {
            new ActivityData
            {
                Title = "Yeni ticket oluşturuldu",
                Description = "BANAT FIRÇA - ERP Sistemi muhasebe hatası",
                TimeAgo = "5 dakika önce",
                Icon = @"<svg class=""w-4 h-4 text-white"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor""><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 6v6m0 0v6m0-6h6m-6 0H6"" /></svg>",
                IconColor = "bg-blue-500",
                Status = "Yeni",
                StatusClass = "bg-blue-100 text-blue-800"
            },
            new ActivityData
            {
                Title = "Ticket çözüldü",
                Description = "SOYBAŞ DEMİR - CRM müşteri kartları sorunu",
                TimeAgo = "15 dakika önce",
                Icon = @"<svg class=""w-4 h-4 text-white"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor""><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 13l4 4L19 7"" /></svg>",
                IconColor = "bg-green-500",
                Status = "Çözüldü",
                StatusClass = "bg-green-100 text-green-800"
            },
            new ActivityData
            {
                Title = "Yeni kullanıcı eklendi",
                Description = "NURTEKS - Fatma Kaya (Muhasebe)",
                TimeAgo = "1 saat önce",
                Icon = @"<svg class=""w-4 h-4 text-white"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor""><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"" /></svg>",
                IconColor = "bg-purple-500",
                Status = "Aktif",
                StatusClass = "bg-purple-100 text-purple-800"
            },
            new ActivityData
            {
                Title = "PMO entegrasyonu test edildi",
                Description = "Sistem ayarları güncellendi",
                TimeAgo = "2 saat önce",
                Icon = @"<svg class=""w-4 h-4 text-white"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor""><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"" /></svg>",
                IconColor = "bg-orange-500",
                Status = "Başarılı",
                StatusClass = "bg-orange-100 text-orange-800"
            }
        };
    }

    private async Task RefreshData()
    {
        IsRefreshing = true;
        await Task.Delay(1500); // Simulate data refresh
        LoadDashboardData();
        IsRefreshing = false;
        StateHasChanged();
    }

    private void FilterByTimeRange()
    {
        // Implement time range filtering logic
        Console.WriteLine($"Filtering by: {SelectedTimeRange}");
        // Reload data based on selected time range
    }

    #region Models
    public class DashboardStats
    {
        public int TotalTickets { get; set; }
        public int PendingTickets { get; set; }
        public int ActiveCompanies { get; set; }
        public decimal ResolutionRate { get; set; }
        public decimal TicketGrowth { get; set; }
    }

    public class StatusData
    {
        public string Name { get; set; } = "";
        public int Count { get; set; }
        public int Percentage { get; set; }
        public string Color { get; set; } = "";
    }

    public class CompanyPerformance
    {
        public string Name { get; set; } = "";
        public string ContactPerson { get; set; } = "";
        public string Initials { get; set; } = "";
        public string ColorGradient { get; set; } = "";
        public int TotalTickets { get; set; }
        public int PendingTickets { get; set; }
        public int ResolvedTickets { get; set; }
        public int SuccessRate { get; set; }
        public string LastActivity { get; set; } = "";
    }

    public class ActivityData
    {
        public string Title { get; set; } = "";
        public string Description { get; set; } = "";
        public string TimeAgo { get; set; } = "";
        public string Icon { get; set; } = "";
        public string IconColor { get; set; } = "";
        public string Status { get; set; } = "";
        public string StatusClass { get; set; } = "";
    }
    #endregion
} *@