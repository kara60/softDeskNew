@page "/admin/dashboard"
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<div class="min-h-screen bg-gray-50">
    <!-- Header -->
    <div class="bg-white shadow-sm border-b border-gray-200">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-4">
                    <div class="p-3 bg-blue-100 rounded-xl">
                        <svg class="w-8 h-8 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 002 2h6a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v3m0 4h4m4 0h4m-4 4h4m-4 4h4m-4-8h4m-4 4h4" />
                        </svg>
                    </div>
                    <div>
                        <h1 class="text-3xl font-bold text-gray-900">Admin Dashboard</h1>
                        <p class="text-gray-600 mt-1">Tüm müşterilerin ticket istatistikleri ve özeti</p>
                    </div>
                </div>
                <div class="flex items-center space-x-4">
                    <div class="text-right">
                        <p class="text-sm text-gray-500">Son güncelleme</p>
                        <p class="text-sm font-medium text-gray-900">@DateTime.Now.ToString("dd.MM.yyyy HH:mm")</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">

        <!-- Stats Overview -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6 mb-8">
            @foreach (var stat in OverviewStats)
            {
                <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow duration-200">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600 mb-1">@stat.Title</p>
                            <p class="text-3xl font-bold text-gray-900">@stat.Value</p>
                            @if (!string.IsNullOrEmpty(stat.Subtitle))
                            {
                                <p class="text-xs text-gray-500 mt-1">@stat.Subtitle</p>
                            }
                        </div>
                        <div class="p-3 rounded-lg @stat.IconBgClass">
                            @((MarkupString)stat.Icon)
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Charts Row -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
            <!-- Ticket Status Distribution -->
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Ticket Durum Dağılımı</h3>
                <div class="relative">
                    <canvas id="statusChart" width="400" height="300"></canvas>
                </div>
            </div>

            <!-- Category Distribution -->
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Kategori Bazlı Dağılım</h3>
                <div class="relative">
                    <canvas id="categoryChart" width="400" height="300"></canvas>
                </div>
            </div>
        </div>

        <!-- Company Performance Table -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden mb-8">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">Müşteri Performansları</h3>
                <p class="text-sm text-gray-600 mt-1">Müşterilerin ticket istatistikleri ve performans göstergeleri</p>
            </div>
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Müşteri</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Toplam Ticket</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Bekleyen</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Çözülen</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Başarı Oranı</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Son Aktivite</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">İşlemler</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var company in CompanyPerformances)
                        {
                            <tr class="hover:bg-gray-50 transition-colors duration-150">
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="flex-shrink-0 h-12 w-12">
                                            <div class="h-12 w-12 rounded-full bg-gradient-to-r @company.ColorGradient flex items-center justify-center">
                                                <span class="text-white font-bold text-sm">@company.Initials</span>
                                            </div>
                                        </div>
                                        <div class="ml-4">
                                            <div class="text-sm font-medium text-gray-900">@company.Name</div>
                                            <div class="text-sm text-gray-500">@company.ContactPerson</div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm font-semibold text-gray-900">@company.TotalTickets</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                                        @company.PendingTickets
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                        @company.ResolvedTickets
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="text-sm font-medium text-gray-900">@company.SuccessRate%</div>
                                        <div class="ml-2 w-16 bg-gray-200 rounded-full h-2">
                                            <div class="bg-green-500 h-2 rounded-full" style="width: @(company.SuccessRate)%"></div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    @company.LastActivity
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <button class="text-blue-600 hover:text-blue-900 mr-3">Detaylar</button>
                                    <button class="text-gray-600 hover:text-gray-900">Raporlar</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Recent Activities -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-200">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">Hızlı İşlemler</h3>
                <p class="text-sm text-gray-600 mt-1">Yakın zamandaki sistem aktiviteleri</p>
            </div>
            <div class="p-6">
                <div class="space-y-4">
                    @foreach (var activity in RecentActivities)
                    {
                        <div class="flex items-start space-x-4 p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors duration-150">
                            <div class="flex-shrink-0">
                                <div class="w-10 h-10 @activity.IconColor rounded-full flex items-center justify-center">
                                    @((MarkupString)activity.Icon)
                                </div>
                            </div>
                            <div class="flex-1 min-w-0">
                                <div class="flex items-center justify-between">
                                    <p class="text-sm font-medium text-gray-900">@activity.Title</p>
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @activity.StatusClass">
                                        @activity.Status
                                    </span>
                                </div>
                                <p class="text-sm text-gray-600 mt-1">@activity.Description</p>
                                <p class="text-xs text-gray-500 mt-2">@activity.TimeAgo</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<StatData> OverviewStats = new();
    private List<CompanyPerformance> CompanyPerformances = new();
    private List<ActivityData> RecentActivities = new();

    protected override async Task OnInitializedAsync()
    {
        LoadSampleData();
        await Task.Delay(100); // DOM yüklenmesini bekle
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Task.Delay(500); // Sayfanın tam yüklenmesini bekle
            await InitializeCharts();
        }
    }

    private async Task InitializeCharts()
    {
        try
        {
            // Status Chart
            await JSRuntime.InvokeVoidAsync("createDoughnutChart", "statusChart", new
            {
                labels = new[] { "Bekleyen", "İşlemde", "Çözüldü", "Kapalı" },
                data = new[] { 8, 5, 10, 2 },
                colors = new[] { "#fbbf24", "#3b82f6", "#10b981", "#6b7280" }
            });

            // Category Chart
            await JSRuntime.InvokeVoidAsync("createBarChart", "categoryChart", new
            {
                labels = new[] { "Hata/Sorun", "Yeni Özellik", "Danışmanlık/Eğitim", "Bakım/Güncelleme" },
                data = new[] { 12, 8, 3, 2 },
                colors = new[] { "#ef4444", "#10b981", "#f59e0b", "#6b7280" }
            });
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Chart initialization error: {ex.Message}");
        }
    }

    private void LoadSampleData()
    {
        // Overview Stats
        OverviewStats = new List<StatData>
        {
            new StatData
            {
                Title = "Toplam Ticket",
                Value = "25",
                Subtitle = "",
                Icon = @"<svg class=""w-6 h-6 text-blue-600"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor""><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"" /></svg>",
                IconBgClass = "bg-blue-100"
            },
            new StatData
            {
                Title = "İnceleniyor",
                Value = "8",
                Subtitle = "",
                Icon = @"<svg class=""w-6 h-6 text-yellow-600"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor""><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"" /></svg>",
                IconBgClass = "bg-yellow-100"
            },
            new StatData
            {
                Title = "İşlemde",
                Value = "5",
                Subtitle = "",
                Icon = @"<svg class=""w-6 h-6 text-blue-600"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor""><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"" /></svg>",
                IconBgClass = "bg-blue-100"
            },
            new StatData
            {
                Title = "Çözüldü",
                Value = "10",
                Subtitle = "1.40 oran",
                Icon = @"<svg class=""w-6 h-6 text-green-600"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor""><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"" /></svg>",
                IconBgClass = "bg-green-100"
            },
            new StatData
            {
                Title = "Kapalı",
                Value = "2",
                Subtitle = "",
                Icon = @"<svg class=""w-6 h-6 text-gray-600"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor""><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" /></svg>",
                IconBgClass = "bg-gray-100"
            }
        };

        // Company Performances
        CompanyPerformances = new List<CompanyPerformance>
        {
            new CompanyPerformance
            {
                Name = "SOYBAŞ DEMİR SANAYİ VE TİCARET ANONİM ŞİRKETİ",
                ContactPerson = "Mehmet Soybaş",
                Initials = "SD",
                ColorGradient = "from-blue-500 to-blue-600",
                TotalTickets = 89,
                PendingTickets = 8,
                ResolvedTickets = 72,
                SuccessRate = 95,
                LastActivity = "2 dakika önce"
            },
            new CompanyPerformance
            {
                Name = "BANAT FIRÇA VE PLASTİK SAN. A.Ş.",
                ContactPerson = "Ayşe Banat",
                Initials = "BF",
                ColorGradient = "from-green-500 to-green-600",
                TotalTickets = 234,
                PendingTickets = 23,
                ResolvedTickets = 198,
                SuccessRate = 91,
                LastActivity = "1 saat önce"
            },
            new CompanyPerformance
            {
                Name = "TEKNOS MAKİNA SANAYİ LTD. ŞTİ.",
                ContactPerson = "Ahmet Teknik",
                Initials = "TM",
                ColorGradient = "from-orange-500 to-orange-600",
                TotalTickets = 145,
                PendingTickets = 15,
                ResolvedTickets = 118,
                SuccessRate = 89,
                LastActivity = "3 saat önce"
            },
            new CompanyPerformance
            {
                Name = "GÜVEN İNŞAAT A.Ş.",
                ContactPerson = "Zeynep Güven",
                Initials = "Gİ",
                ColorGradient = "from-indigo-500 to-indigo-600",
                TotalTickets = 67,
                PendingTickets = 4,
                ResolvedTickets = 58,
                SuccessRate = 92,
                LastActivity = "6 saat önce"
            }
        };

        // Recent Activities
        RecentActivities = new List<ActivityData>
        {
            new ActivityData
            {
                Title = "Yeni ticket oluşturuldu",
                Description = "BANAT FIRÇA - ERP Sistemi muhasebe hatası",
                TimeAgo = "5 dakika önce",
                Icon = @"<svg class=""w-4 h-4 text-white"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor""><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 6v6m0 0v6m0-6h6m-6 0H6"" /></svg>",
                IconColor = "bg-blue-500",
                Status = "Yeni",
                StatusClass = "bg-blue-100 text-blue-800"
            },
            new ActivityData
            {
                Title = "Ticket çözüldü",
                Description = "SOYBAŞ DEMİR - CRM müşteri kartları sorunu",
                TimeAgo = "15 dakika önce",
                Icon = @"<svg class=""w-4 h-4 text-white"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor""><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 13l4 4L19 7"" /></svg>",
                IconColor = "bg-green-500",
                Status = "Çözüldü",
                StatusClass = "bg-green-100 text-green-800"
            },
            new ActivityData
            {
                Title = "Yeni kullanıcı eklendi",
                Description = "TEKNOS MAKİNA - Fatma Yılmaz sisteme eklendi",
                TimeAgo = "1 saat önce",
                Icon = @"<svg class=""w-4 h-4 text-white"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor""><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"" /></svg>",
                IconColor = "bg-purple-500",
                Status = "Tamamlandı",
                StatusClass = "bg-purple-100 text-purple-800"
            },
            new ActivityData
            {
                Title = "Sistem bakımı tamamlandı",
                Description = "Planlı bakım çalışması başarıyla tamamlandı",
                TimeAgo = "3 saat önce",
                Icon = @"<svg class=""w-4 h-4 text-white"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor""><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"" /><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M15 12a3 3 0 11-6 0 3 3 0 016 0z"" /></svg>",
                IconColor = "bg-gray-500",
                Status = "Bakım",
                StatusClass = "bg-gray-100 text-gray-800"
            }
        };
    }

    // Model classes
    public class StatData
    {
        public string Title { get; set; } = "";
        public string Value { get; set; } = "";
        public string Subtitle { get; set; } = "";
        public string Icon { get; set; } = "";
        public string IconBgClass { get; set; } = "";
    }

    public class CompanyPerformance
    {
        public string Name { get; set; } = "";
        public string ContactPerson { get; set; } = "";
        public string Initials { get; set; } = "";
        public string ColorGradient { get; set; } = "";
        public int TotalTickets { get; set; }
        public int PendingTickets { get; set; }
        public int ResolvedTickets { get; set; }
        public int SuccessRate { get; set; }
        public string LastActivity { get; set; } = "";
    }

    public class ActivityData
    {
        public string Title { get; set; } = "";
        public string Description { get; set; } = "";
        public string TimeAgo { get; set; } = "";
        public string Icon { get; set; } = "";
        public string IconColor { get; set; } = "";
        public string Status { get; set; } = "";
        public string StatusClass { get; set; } = "";
    }
}